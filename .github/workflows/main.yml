name: MLOps Pipeline for Fake News Detection

permissions:
  security-events: write

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  pipeline:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
        
    # Step 3: Install Python Dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r instructions.txt

    # Step 4: Extract Dataset ZIP
    - name: Extract Dataset ZIP
      run: |
        mkdir -p dataset
        unzip fake_news_final.zip -d dataset/
        echo "Dataset extracted."

    # Step 5: Run Dataset Cleaning Script
    - name: Run Dataset Cleaning Script
      run: python scripts/clean_dataset.py

    # Step 6: Clone GitHub Repository
    - name: Clone GitHub Repository
      run: |
        git clone https://github.com/anmolmishra334/Fake-News-Detection-NLP dataset/Git_Repo_FND
        echo "Repository cloned successfully."
   
    # Step 7: Train ML Model
    - name: Train Model
      run: |
        python scripts/train_model.py
        echo "Model trained successfully."
        
    # Step 8: Displace model.pkl and Commit Changes
    - name: Set execute permission for the script
      run: chmod +x dataset/git_repo_FND/scripts/update_model.sh

    - name: Execute the script
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_RUN_NUMBER: ${{ github.run_number }}
      run: dataset/git_repo_FND/scripts/update_model.sh
       
    # Step 9: Build Docker Image
    - name: Build Docker Image
      run: docker build -t anmolmishra334/fake_news_detection:${{ github.run_number }} .

    # Step 10: Push Docker Image to DockerHub
    - name: Push Docker Image to DockerHub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push anmolmishra334/fake_news_detection:${{ github.run_number }}

    # Step 11: Clear and Prepare Scan Results Folder
    - name: Clear Scan Results Folder
      run: |
        mkdir -p scan_results
        rm -rf scan_results/*
        
    # Step 12: Initialize CodeQL (SonarQube)
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python

    # Step 13: Perform CodeQL Analysis (SonarQube)
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
    
    # Step 14: Pull Trivy Docker Image
    - name: Pull Trivy Docker Image
      run: docker pull aquasec/trivy:latest

    # Step 15: Scan Docker Image for Vulnerabilities
    - name: Scan Docker Image
      run: |
        mkdir -p scan_results
        docker run --rm \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v ${{ github.workspace }}:/root/.cache/ \
          aquasec/trivy image anmolmishra334/fake_news_detection:${{ github.run_number }} \
          > scan_results/trivy_scan_report_${{ github.run_number }}.txt

    # Step 16: Upload Trivy Scan Report as an Artifact
    - name: Upload Trivy Scan Report
      uses: actions/upload-artifact@v4
      with:
        name: Trivy-Scan-Report
        path: scan_results/trivy_scan_report_${{ github.run_number }}.txt
