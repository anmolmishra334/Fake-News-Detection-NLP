name: MLOps Pipeline for Fake News Detection

permissions:
  security-events: write
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  pipeline:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Install Required Tools
   # - name: Install Required Tools
    #  run: |
     #   sudo apt update
      #  sudo apt install -y jq curl unzip wget

    # Step 3: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    # Step 4: Install Python Dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r instructions.txt

    # Step 5: Extract Dataset ZIP
    - name: Extract Dataset ZIP
      run: |
        mkdir -p dataset
        unzip fake_news_final.zip -d dataset/
        echo "Dataset extracted."

    # Step 6: Run Dataset Cleaning Script
    - name: Run Dataset Cleaning Script
      run: python scripts/clean_dataset.py

    # Step 7: Train ML Model
    - name: Train Model
      run: |
        python scripts/train_model.py
        echo "Model trained successfully."

    # Step 8: Build Docker Image
    - name: Build Docker Image
      run: docker build -t anmolmishra334/fake_news_detection:${{ github.run_number }} .

    # Step 9: Push Docker Image to DockerHub
    - name: Push Docker Image to DockerHub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push anmolmishra334/fake_news_detection:${{ github.run_number }}

    # Step 10: Clear and Prepare Scan Results Folder
    - name: Clear Scan Results Folder
      run: |
        mkdir -p scan_results
        rm -rf scan_results/*
        
    # Step 11: Initialize CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python

    # Step 12: Perform CodeQL Analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
    
   # Step 13: Start OWASP ZAP
    - name: Start OWASP ZAP
      run: |
        docker run -u zap -p 8080:8080 --name owasp-zap -d owasp/zap
        echo "Waiting for OWASP ZAP to start..."
        sleep 30

    # Step 14: Run OWASP ZAP Scan
    - name: Run OWASP ZAP Scan
      run: |
        docker exec owasp-zap zap-baseline.py \
          -t http://localhost:5000 -r zap_report.html

    # Step 15: Save OWASP ZAP Report
    - name: Save OWASP ZAP Report
      run: |
        mv zap_report.html scan_results/zap_report.html


